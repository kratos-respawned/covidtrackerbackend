function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{Promise.resolve(value).then(_next,_throw)}}function _async_to_generator(fn){return function(){var self=this,args=arguments;return new Promise(function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(undefined)})}}function _ts_generator(thisArg,body){var f,y,t,g,_={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]};return g={next:verb(0),"throw":verb(1),"return":verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}}import{getCovidData}from"./utils/getCovidData.js";import{getNews}from"./utils/getNews.js";import mongoose from"mongoose";import express from"express";import News from"./schema/news.js";import mostAffectedCountries from"./schema/top_contries.js";import dotenv from"dotenv";import cors from"cors";import{getVaccinationData}from"./utils/getVaccinationData.js";var app=express();app.use(cors({origin:"*"}));dotenv.config();if(!process.env.MONGO_URL)throw new Error("MONGO_URL not found");mongoose.connect(process.env.MONGO_URL).then(function(){console.log("Connected to MongoDB")});app.get("/news",function(){var _ref=_async_to_generator(function(req,res){var news,data;return _ts_generator(this,function(_state){switch(_state.label){case 0:console.log("API called");return[4,News.find({validTill:{$gt:new Date().getTime()}})];case 1:news=_state.sent();if(!(news.length===0))return[3,3];return[4,getNews()];case 2:data=_state.sent();setTimeout(_async_to_generator(function(){return _ts_generator(this,function(_state){switch(_state.label){case 0:return[4,News.deleteMany({})];case 1:_state.sent();return[4,News.insertMany(data)];case 2:_state.sent();return[2]}})}),0);res.json(data).status(200);return[3,4];case 3:res.json(news).status(200);_state.label=4;case 4:return[2]}})});return function(req,res){return _ref.apply(this,arguments)}}());app.get("/countryWise",function(){var _ref=_async_to_generator(function(req,res){var affectedCountries,data;return _ts_generator(this,function(_state){switch(_state.label){case 0:console.log("API called");return[4,mostAffectedCountries.find({})];case 1:affectedCountries=_state.sent();if(!(affectedCountries.length===0))return[3,3];return[4,getCovidData()];case 2:data=_state.sent();setTimeout(_async_to_generator(function(){return _ts_generator(this,function(_state){switch(_state.label){case 0:return[4,mostAffectedCountries.insertMany(data)];case 1:_state.sent();return[2]}})}),0);res.json(data).status(200);return[3,4];case 3:res.json(affectedCountries).status(200);_state.label=4;case 4:return[2]}})});return function(req,res){return _ref.apply(this,arguments)}}());app.get("/vaccinationData",function(){var _ref=_async_to_generator(function(req,res){var data;return _ts_generator(this,function(_state){switch(_state.label){case 0:console.log("API called");return[4,getVaccinationData()];case 1:data=_state.sent();res.json(data).status(200);return[2]}})});return function(req,res){return _ref.apply(this,arguments)}}());var PORT=process.env.PORT||5173;app.listen(PORT,function(){console.log("Server is running on port ".concat(PORT))});
//# sourceMappingURL=index.js.map