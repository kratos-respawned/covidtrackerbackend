{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { getCovidData } from \"./utils/getCovidData.js\";\r\nimport { getNews } from \"./utils/getNews.js\";\r\nimport mongoose from \"mongoose\";\r\nimport express from \"express\";\r\nimport News from \"./schema/news.js\";\r\nimport mostAffectedCountries from \"./schema/top_contries.js\";\r\nimport dotenv from \"dotenv\";\r\nimport cors from \"cors\";\r\nimport { getVaccinationData } from \"./utils/getVaccinationData.js\";\r\nconst app = express();\r\napp.use(\r\n  cors({\r\n    origin: \"*\",\r\n  })\r\n);\r\ndotenv.config();\r\nif (!process.env.MONGO_URL) throw new Error(\"MONGO_URL not found\");\r\nmongoose.connect(process.env.MONGO_URL).then(() => {\r\n  console.log(\"Connected to MongoDB\");\r\n});\r\n\r\napp.get(\"/news\", async (req, res) => {\r\n  console.log(\"API called\");\r\n  const news = await News.find({ validTill: { $gt: new Date().getTime() } });\r\n  if (news.length === 0) {\r\n    const data = await getNews();\r\n    setTimeout(async () => {\r\n      await News.deleteMany({});\r\n      await News.insertMany(data);\r\n    }, 0);\r\n    res.json(data).status(200);\r\n  } else {\r\n    res.json(news).status(200);\r\n  }\r\n});\r\n\r\napp.get(\"/countryWise\", async (req, res) => {\r\n  console.log(\"API called\");\r\n  \r\n  const affectedCountries = await mostAffectedCountries.find({\r\n    // validTill: { $gt: new Date().getTime() },\r\n  });\r\n  if (affectedCountries.length === 0) {\r\n    const data = await getCovidData();\r\n    setTimeout(async () => {\r\n      // await mostAffectedCountries.deleteMany({});\r\n      await mostAffectedCountries.insertMany(data);\r\n    }, 0);\r\n    res.json(data).status(200);\r\n  } else {\r\n    res.json(affectedCountries).status(200);\r\n  }\r\n});\r\napp.get(\"/vaccinationData\", async (req, res) => {\r\n  console.log(\"API called\");\r\n  const data= await getVaccinationData();\r\n  \r\n  res.json(data).status(200);\r\n});\r\nconst PORT = process.env.PORT || 5173;\r\n\r\napp.listen(PORT, () => {\r\n  console.log(`Server is running on port ${PORT}`);\r\n});\r\n"],"names":["getCovidData","getNews","mongoose","express","News","mostAffectedCountries","dotenv","cors","getVaccinationData","app","use","origin","config","process","env","MONGO_URL","Error","connect","then","console","log","get","req","res","news","data","find","validTill","$gt","Date","getTime","length","setTimeout","deleteMany","insertMany","json","status","affectedCountries","PORT","listen"],"mappings":"osDAAA,OAASA,YAAY,KAAQ,yBAA0B,AACvD,QAASC,OAAO,KAAQ,oBAAqB,AAC7C,QAAOC,aAAc,UAAW,AAChC,QAAOC,YAAa,SAAU,AAC9B,QAAOC,SAAU,kBAAmB,AACpC,QAAOC,0BAA2B,0BAA2B,AAC7D,QAAOC,WAAY,QAAS,AAC5B,QAAOC,SAAU,MAAO,AACxB,QAASC,kBAAkB,KAAQ,+BAAgC,CACnE,IAAMC,IAAMN,UACZM,IAAIC,GAAG,CACLH,KAAK,CACHI,OAAQ,GACV,IAEFL,OAAOM,MAAM,GACb,GAAI,CAACC,QAAQC,GAAG,CAACC,SAAS,CAAE,MAAM,IAAIC,MAAM,sBAAuB,CACnEd,SAASe,OAAO,CAACJ,QAAQC,GAAG,CAACC,SAAS,EAAEG,IAAI,CAAC,UAAM,CACjDC,QAAQC,GAAG,CAAC,uBACd,GAEAX,IAAIY,GAAG,CAAC,4BAAS,oBAAA,SAAOC,IAAKC,IAAQ,KAE7BC,KAEEC,4EAHRN,QAAQC,GAAG,CAAC,cACC,SAAMhB,KAAKsB,IAAI,CAAC,CAAEC,UAAW,CAAEC,IAAK,IAAIC,OAAOC,OAAO,EAAG,CAAE,WAAlEN,KAAO,kBACTA,CAAAA,KAAKO,MAAM,GAAK,CAAA,EAAhBP,YACW,SAAMvB,kBAAbwB,KAAO,cACbO,WAAW,oBAAA,UAAY,wEACrB,SAAM5B,KAAK6B,UAAU,CAAC,CAAC,WAAvB,cACA,SAAM7B,KAAK8B,UAAU,CAACT,cAAtB,0BACF,GAAG,GACHF,IAAIY,IAAI,CAACV,MAAMW,MAAM,CAAC,wBAEtBb,IAAIY,IAAI,CAACX,MAAMY,MAAM,CAAC,uCAE1B,mBAbwBd,IAAKC,4CAe7Bd,IAAIY,GAAG,CAAC,mCAAgB,oBAAA,SAAOC,IAAKC,IAAQ,KAGpCc,kBAIEZ,4EANRN,QAAQC,GAAG,CAAC,cAEc,SAAMf,sBAAsBqB,IAAI,CAAC,CAE3D,WAFMW,kBAAoB,kBAGtBA,CAAAA,kBAAkBN,MAAM,GAAK,CAAA,EAA7BM,YACW,SAAMrC,uBAAbyB,KAAO,cACbO,WAAW,oBAAA,UAAY,wEAErB,SAAM3B,sBAAsB6B,UAAU,CAACT,cAAvC,0BACF,GAAG,GACHF,IAAIY,IAAI,CAACV,MAAMW,MAAM,CAAC,wBAEtBb,IAAIY,IAAI,CAACE,mBAAmBD,MAAM,CAAC,uCAEvC,mBAhB+Bd,IAAKC,4CAiBpCd,IAAIY,GAAG,CAAC,uCAAoB,oBAAA,SAAOC,IAAKC,IAAQ,KAExCE,4EADNN,QAAQC,GAAG,CAAC,cACA,SAAMZ,6BAAZiB,KAAM,cAEZF,IAAIY,IAAI,CAACV,MAAMW,MAAM,CAAC,iBACxB,mBALmCd,IAAKC,4CAMxC,IAAMe,KAAOzB,QAAQC,GAAG,CAACwB,IAAI,EAAI,KAEjC7B,IAAI8B,MAAM,CAACD,KAAM,UAAM,CACrBnB,QAAQC,GAAG,CAAC,AAAC,6BAAiC,OAALkB,MAC3C"}